// Строилов Денис - КС-40 - Лаба 5 - Вариант 5

#include "mpi.h"
#include <stdio.h>
#include <iostream>
#include <time.h>

using namespace std;

// Кол-во шагов, которые надо рассчитать (в задании было переполнение, поэтому убираем до 2-х шагов - так переполнения не будет)
const int STEPS = 2;

// Команда для запуска программы (т.к. от -20 до 20 с шагом 1, то есть, всего 41 поток)
// mpiexec -n 41 Lab-6.exe

int main(int argc, char** argv)
{
	// Ранг потока (номер потока среди всех потоков)
	int rank;

	// Инициализируем MPI
	MPI_Init(&argc, &argv);

	// Инициализируем коммуникатор
	MPI_Comm comm = MPI_COMM_WORLD;

	// Получаем в переменную rank ранг текущего потока в глобальном коммуникаторе (т.е. среди всех потоков программы)
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);

	// Расчет начального приближения для данного потока
	int x = rank - 20;

	// Расчет по формуле
	for (int i = 0; i < STEPS; i++)
	{
		x = (int)pow(x, 2) - 7 * x + 12;
	}

	// Создаем массив под ответы
	int* result = new int[41]{0};

	// После расчета по формуле, собираем решения в массив у главного (0-го) потока
	MPI_Gather(&x, 1, MPI_INT, result, 1, MPI_INT, 0, comm);

	// В главном потоке выводим массив с результатами в консоль
	if (rank == 0)
	{
		for (int i = 0; i < 41; i++)
		{
			cout << result[i] << endl;
		}
	}

	// Очищаем память
	delete[] result;

	// Заканчиваем работу MPI
	MPI_Finalize();
}